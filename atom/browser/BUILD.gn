import("//build/config/ui.gni")
import("//build/config/features.gni")
import("//extensions/features/features.gni")
import("//media/media_options.gni")

source_set("browser") {
  public_configs = [
    "//electron/build:electron_config",
  ]

  public_deps = [
    "//content/public/browser",
    "//content/public/common",
    "//electron/vendor/brightray:browser",
    "//ui/events",
    "//components/security_state/content",
    "//components/security_state/core",
    "//components/autofill/content/browser:browser",
    "//components/password_manager/core/common",
    "//third_party/protobuf:protobuf_lite",
    "//third_party/WebKit/public:blink_headers",
  ]

  deps = [
    "//electron/chromium_src/chrome/browser/prerender",
    "//chrome/browser/safe_browsing",
    "//electron:common",
    "//electron/muon/app",
    # @todo(bridiver) fix circular dep
    # "//electron/muon/browser",
    "//base",
    "//chrome/common:constants",
    "//storage/browser",
    "//storage/common",
    "//components/prefs",
    "//components/metrics",
    ":importer",
    "//electron/vendor/ad-block/muon:ad_block",
    "//electron/vendor/tracking-protection/muon:tp_node_addon",
  ]

  sources = [
    "api/atom_api_app.cc",
    "api/atom_api_app.h",
    "api/atom_api_autofill.cc",
    "api/atom_api_autofill.h",
    "api/atom_api_auto_updater.cc",
    "api/atom_api_auto_updater.h",
    "api/atom_api_content_settings.cc",
    "api/atom_api_content_settings.h",
    "api/atom_api_content_tracing.cc",
    "api/atom_api_cookies.cc",
    "api/atom_api_cookies.h",
    "api/atom_api_debugger.cc",
    "api/atom_api_debugger.h",
    "api/atom_api_download_item.cc",
    "api/atom_api_download_item.h",
    "api/atom_api_dialog.cc",
    "api/atom_api_global_shortcut.cc",
    "api/atom_api_global_shortcut.h",
    "api/atom_api_importer.cc",
    "api/atom_api_importer.h",
    "api/atom_api_menu.cc",
    "api/atom_api_menu.h",
    "api/atom_api_protocol.cc",
    "api/atom_api_protocol.h",
    "api/atom_api_screen.cc",
    "api/atom_api_screen.h",
    "api/atom_api_session.cc",
    "api/atom_api_session.h",
    "api/atom_api_spellchecker.cc",
    "api/atom_api_spellchecker.h",
    "api/atom_api_system_preferences.cc",
    "api/atom_api_system_preferences.h",
    "api/atom_api_tray.cc",
    "api/atom_api_tray.h",
    "api/atom_api_user_prefs.cc",
    "api/atom_api_user_prefs.h",
    "api/atom_api_web_contents.cc",
    "api/atom_api_web_contents.h",
    "api/atom_api_web_contents_mac.mm",
    "api/atom_api_web_request.cc",
    "api/atom_api_web_request.h",
    "api/atom_api_window.cc",
    "api/atom_api_window.h",
    "api/event.cc",
    "api/event.h",
    "api/event_emitter.cc",
    "api/event_emitter.h",
    "api/trackable_object.cc",
    "api/trackable_object.h",
    "api/save_page_handler.cc",
    "api/save_page_handler.h",
    "browser/resources/transport_security_state_static.json",
    "auto_updater.cc",
    "auto_updater.h",
    "atom_browser_client.cc",
    "atom_browser_client.h",
    "atom_browser_context.cc",
    "atom_browser_context.h",
    "atom_download_manager_delegate.cc",
    "atom_download_manager_delegate.h",
    "atom_browser_main_parts.cc",
    "atom_browser_main_parts.h",
    "atom_quota_permission_context.cc",
    "atom_quota_permission_context.h",
    "atom_resource_dispatcher_host_delegate.cc",
    "atom_resource_dispatcher_host_delegate.h",
    "atom_speech_recognition_manager_delegate.cc",
    "atom_speech_recognition_manager_delegate.h",
    "autofill/atom_autofill_client.cc",
    "autofill/atom_autofill_client.h",
    "autofill/autofill_observer.h",
    "autofill/personal_data_manager_factory.cc",
    "autofill/personal_data_manager_factory.h",
    "bridge_task_runner.cc",
    "bridge_task_runner.h",
    "browser.cc",
    "browser.h",
    "browser_context_keyed_service_factories.cc",
    "browser_context_keyed_service_factories.h",
    "browser_observer.h",
    "//chrome/browser/extensions/api/file_system/file_entry_picker.cc",
    "//chrome/browser/extensions/api/file_system/file_entry_picker.h",
    "common_web_contents_delegate.cc",
    "common_web_contents_delegate.h",
    "javascript_environment.cc",
    "javascript_environment.h",
    "lib/bluetooth_chooser.cc",
    "lib/bluetooth_chooser.h",
    "login_handler.cc",
    "login_handler.h",
    "native_window.cc",
    "native_window.h",
    "native_window_observer.h",
    "net/asar/asar_protocol_handler.cc",
    "net/asar/asar_protocol_handler.h",
    "net/asar/url_request_asar_job.cc",
    "net/asar/url_request_asar_job.h",
    "net/atom_cert_verifier.cc",
    "net/atom_cert_verifier.h",
    "net/atom_network_delegate.cc",
    "net/atom_network_delegate.h",
    "net/atom_ssl_config_service.cc",
    "net/atom_ssl_config_service.h",
    "net/http_protocol_handler.cc",
    "net/http_protocol_handler.h",
    "net/js_asker.cc",
    "net/js_asker.h",
    "net/url_request_string_job.cc",
    "net/url_request_string_job.h",
    "net/url_request_buffer_job.cc",
    "net/url_request_buffer_job.h",
    "net/url_request_fetch_job.cc",
    "net/url_request_fetch_job.h",
    "relauncher.cc",
    "relauncher.h",
    "ui/accelerator_util.cc",
    "ui/accelerator_util.h",
    "ui/atom_menu_model.cc",
    "ui/atom_menu_model.h",
    "ui/drag_util.h",
    "ui/message_box.h",
    "ui/tray_icon.cc",
    "ui/tray_icon.h",
    "unresponsive_suppressor.cc",
    "unresponsive_suppressor.h",
    "web_contents_permission_helper.cc",
    "web_contents_permission_helper.h",
    "web_contents_preferences.cc",
    "web_contents_preferences.h",
    "window_list.cc",
    "window_list.h",
    "window_list_observer.h",
  ]

  if (is_posix) {
    sources += [
      "atom_browser_main_parts_posix.cc",
    ]
  }

  if (is_mac) {
    deps += [
      ":mac_auto_updater",
    ]

    libs = [
      "Security.framework",
    ]

    sources += [
      "api/atom_api_system_preferences_mac.mm",
      "common_web_contents_delegate_mac.mm",
      "api/atom_api_menu_mac.h",
      "api/atom_api_menu_mac.mm",
      "atom_browser_main_parts_mac.mm",
      "browser_mac.mm",
      "mac/atom_application.h",
      "mac/atom_application.mm",
      "mac/atom_application_delegate.h",
      "mac/atom_application_delegate.mm",
      "mac/dict_util.h",
      "mac/dict_util.mm",
      "native_window_mac.h",
      "native_window_mac.mm",
      "relauncher_mac.cc",
      "ui/accelerator_util_mac.mm",
      "ui/cocoa/atom_menu_controller.h",
      "ui/cocoa/atom_menu_controller.mm",
      "ui/drag_util_mac.mm",
      "ui/message_box_mac.mm",
      "ui/tray_icon_cocoa.h",
      "ui/tray_icon_cocoa.mm",
    ]
  }

  if (use_aura) {
    sources += [
      "api/atom_api_menu_views.cc",
      "api/atom_api_menu_views.h",
      "common_web_contents_delegate_views.cc",
      "native_window_views.h",
      "ui/accelerator_util_views.cc",
      "ui/views/frameless_view.cc",
      "ui/views/frameless_view.h",
      "ui/views/menu_bar.cc",
      "ui/views/menu_bar.h",
      "ui/views/menu_delegate.cc",
      "ui/views/menu_delegate.h",
      "ui/views/menu_model_adapter.cc",
      "ui/views/menu_model_adapter.h",
      "ui/views/native_frame_view.cc",
      "ui/views/native_frame_view.h",
      "ui/views/submenu_button.cc",
      "ui/views/submenu_button.h",
    ]

    deps += [
      "//services/service_manager/public/cpp",
      "//ui/wm",
      "//ui/display",
    ]
  }
  if (is_win) {
    sources += [
      "ui/views/win_frame_view.cc",
      "ui/views/win_frame_view.h",
      "browser_win.cc",
      "native_window_views_win.cc",
      "relauncher_win.cc",
      "ui/message_box_win.cc",
      "ui/tray_icon_win.cc",
      "ui/win/atom_desktop_window_tree_host_win.cc",
      "ui/win/atom_desktop_window_tree_host_win.h",
      "ui/win/jump_list.cc",
      "ui/win/jump_list.h",
      "ui/win/message_handler_delegate.cc",
      "ui/win/message_handler_delegate.h",
      "ui/win/notify_icon_host.cc",
      "ui/win/notify_icon_host.h",
      "ui/win/notify_icon.cc",
      "ui/win/notify_icon.h",
      "ui/win/taskbar_host.cc",
      "ui/win/taskbar_host.h",
    ]

    libs = [ "uiautomationcore.lib" ]

    public_deps += [
      "//ui/views",
      "//ui/views/controls/webview",
    ]
  }

  if (is_linux) {
    sources += [
      "browser_linux.cc",
      "relauncher_linux.cc",
      "ui/message_box_gtk.cc",
      "ui/tray_icon_gtk.cc",
      "ui/tray_icon_gtk.h",
      "ui/views/global_menu_bar_x11.cc",
      "ui/views/global_menu_bar_x11.h",
      "ui/x/event_disabler.cc",
      "ui/x/event_disabler.h",
      "ui/x/window_state_watcher.cc",
      "ui/x/window_state_watcher.h",
      "ui/x/x_window_utils.cc",
      "ui/x/x_window_utils.h",
    ]

    deps +=  [
      "//electron/chromium_src:menu_bar",
      "//chrome/browser/ui/libgtkui:libgtkui",
      "//electron/build:gtk3",
    ]
  }

  if (use_aura) {
    sources += [
      "native_window_views.cc",
      "ui/drag_util_views.cc",
    ]
  }

  if (enable_extensions) {
    deps += [
      "//electron:brave_resources",
      "//chrome/browser/resources:component_extension_resources",
    ]

    sources += [
      "extensions/api/atom_extensions_api_client.cc",
      "extensions/api/atom_extensions_api_client.h",
      "extensions/atom_browser_client_extensions_part.cc",
      "extensions/atom_browser_client_extensions_part.h",
      "extensions/atom_component_extensions.cc",
      "extensions/atom_component_extensions.h",
      "extensions/atom_extension_host_delegate.cc",
      "extensions/atom_extension_host_delegate.h",
      "extensions/atom_extensions_network_delegate.cc",
      "extensions/atom_extensions_network_delegate.h",
      "extensions/atom_extension_system.cc",
      "extensions/atom_extension_system.h",
      "extensions/atom_extension_system_factory.cc",
      "extensions/atom_extension_system_factory.h",
      "extensions/atom_extension_web_contents_observer.cc",
      "extensions/atom_extension_web_contents_observer.h",
      "extensions/atom_extensions_browser_client.cc",
      "extensions/atom_extensions_browser_client.h",
      "extensions/atom_process_manager_delegate.cc",
      "extensions/atom_process_manager_delegate.h",
      "extensions/shared_user_script_master.cc",
      "extensions/shared_user_script_master.h",
      "extensions/tab_helper.cc",
      "extensions/tab_helper.h",
    ]
  }
}

source_set("importer") {
  public_configs = [
    "//electron/build:electron_config"
  ]

  sources = [
    "importer/external_process_importer_client.cc",
    "importer/external_process_importer_client.h",
    "importer/in_process_importer_bridge.cc",
    "importer/in_process_importer_bridge.h",
    "importer/profile_writer.cc",
    "importer/profile_writer.h",
  ]

  deps = [
    "//electron:utility",
    "//third_party/protobuf:protobuf_lite",
  ]
}

source_set("mac_auto_updater") {
  public_configs = [
    "//electron/build:electron_config",
  ]

  cflags = [
    "-fobjc-weak",
    "-F",
    rebase_path("//electron/external_binaries"),
  ]

  sources = [
    "auto_updater_mac.mm",
  ]
}
